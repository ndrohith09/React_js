{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    setTimeout(() => {\n      fetch('http://localhost:8000/bls').then(res => {\n        if (!res.ok) {\n          throw Error('could not fetch data for that resource');\n        }\n\n        return res.json();\n      }).then(data => {\n        setIsPending(false);\n        setData(data);\n        setError(null);\n      }).catch(err => {\n        setIsPending(false);\n        setError(err.message);\n      });\n    }, 500);\n  }, [url]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n\n_s(useFetch, \"VxPkICXS4AfkXU1R8tuEJAA8e58=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/home/rohith/Desktop/React js/firstapp/src/useFetch.js"],"names":["useState","useEffect","useFetch","url","data","setData","isPending","setIsPending","error","setError","setTimeout","fetch","then","res","ok","Error","json","catch","err","message"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAmC,OAAnC;;AACA,MAAMC,QAAQ,GAAKC,GAAD,IAAS;AAAA;;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,UAAU,CAAC,MAAM;AACfC,MAAAA,KAAK,CAAC,2BAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAI;AACb,YAAG,CAACA,GAAG,CAACC,EAAR,EAAW;AACX,gBAAMC,KAAK,CAAC,wCAAD,CAAX;AACC;;AACC,eAAOF,GAAG,CAACG,IAAJ,EAAP;AACD,OAND,EAOCJ,IAPD,CAOMR,IAAI,IAAI;AACZG,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAK,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,OAXD,EAYCQ,KAZD,CAYQC,GAAG,IAAI;AACfX,QAAAA,YAAY,CAAC,KAAD,CAAZ;AAEAE,QAAAA,QAAQ,CAACS,GAAG,CAACC,OAAL,CAAR;AACC,OAhBD;AAiBD,KAlBS,EAkBP,GAlBO,CAAV;AAmBD,GApBQ,EAoBN,CAAChB,GAAD,CApBM,CAAT;AAsBA,SAAM;AAAEC,IAAAA,IAAF;AAAQE,IAAAA,SAAR;AAAkBE,IAAAA;AAAlB,GAAN;AAED,CA7BD;;GAAMN,Q;;AA8BN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect} from 'react';\nconst useFetch  = (url) => {\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setTimeout(() => {\n      fetch('http://localhost:8000/bls')\n      .then(res => {\n      if(!res.ok){\n      throw Error('could not fetch data for that resource');\n      }\n        return res.json();\n      })\n      .then(data => {\n        setIsPending(false);\n        setData(data);\n        setError(null);\n      })\n      .catch( err => {\n      setIsPending(false);\n\n      setError(err.message);\n      } )\n    }, 500);\n  }, [url]);\n\n  return{ data, isPending,error  }\n\n}\nexport default useFetch;"]},"metadata":{},"sourceType":"module"}